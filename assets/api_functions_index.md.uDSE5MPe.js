import{_ as s,c as a,o as t,ag as l}from"./chunks/framework.BVIN5JXz.js";const c=JSON.parse('{"title":"函数工具","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/index.md","filePath":"api/functions/index.md","lastUpdated":1757213416000}'),n={name:"api/functions/index.md"};function e(h,i,p,k,r,d){return t(),a("div",null,[...i[0]||(i[0]=[l(`<h1 id="函数工具" tabindex="-1">函数工具 <a class="header-anchor" href="#函数工具" aria-label="Permalink to &quot;函数工具&quot;">​</a></h1><p>函数相关的实用工具函数。</p><h2 id="函数列表" tabindex="-1">函数列表 <a class="header-anchor" href="#函数列表" aria-label="Permalink to &quot;函数列表&quot;">​</a></h2><h3 id="debounce" tabindex="-1">debounce <a class="header-anchor" href="#debounce" aria-label="Permalink to &quot;debounce&quot;">​</a></h3><p>延迟函数执行直到等待时间结束。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { debounce } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> debouncedFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> debounce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;执行&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>特性：</strong></p><ul><li>防抖功能，避免频繁调用</li><li>支持立即执行选项</li><li>支持取消功能</li></ul><p><a href="/utils/api/functions/debounce.html">查看详细文档 →</a></p><h3 id="throttle" tabindex="-1">throttle <a class="header-anchor" href="#throttle" aria-label="Permalink to &quot;throttle&quot;">​</a></h3><p>限制函数执行频率。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { throttle } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> throttledFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> throttle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;执行&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>特性：</strong></p><ul><li>节流功能，控制执行频率</li><li>支持立即执行选项</li><li>支持取消功能</li></ul><p><a href="/utils/api/functions/throttle.html">查看详细文档 →</a></p><h3 id="delay" tabindex="-1">delay <a class="header-anchor" href="#delay" aria-label="Permalink to &quot;delay&quot;">​</a></h3><p>延迟函数执行。</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { delay } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 延迟 1 秒</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1 秒后执行&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>特性：</strong></p><ul><li>简单的延迟执行</li><li>返回 Promise</li><li>支持取消功能</li></ul><p><a href="/utils/api/functions/delay.html">查看详细文档 →</a></p><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><h3 id="防抖-debounce" tabindex="-1">防抖 (debounce) <a class="header-anchor" href="#防抖-debounce" aria-label="Permalink to &quot;防抖 (debounce)&quot;">​</a></h3><ul><li>搜索输入框</li><li>窗口大小调整</li><li>按钮点击防重复</li></ul><h3 id="节流-throttle" tabindex="-1">节流 (throttle) <a class="header-anchor" href="#节流-throttle" aria-label="Permalink to &quot;节流 (throttle)&quot;">​</a></h3><ul><li>滚动事件处理</li><li>鼠标移动事件</li><li>API 请求频率控制</li></ul><h3 id="延迟-delay" tabindex="-1">延迟 (delay) <a class="header-anchor" href="#延迟-delay" aria-label="Permalink to &quot;延迟 (delay)&quot;">​</a></h3><ul><li>动画延迟</li><li>异步操作间隔</li><li>测试中的等待</li></ul><h2 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h2><p>所有函数都经过优化，具有最小的打包体积：</p><ul><li><strong>debounce</strong>: ~0.5KB</li><li><strong>throttle</strong>: ~0.5KB</li><li><strong>delay</strong>: ~0.3KB</li></ul><h2 id="类型安全" tabindex="-1">类型安全 <a class="header-anchor" href="#类型安全" aria-label="Permalink to &quot;类型安全&quot;">​</a></h2><p>完全支持 TypeScript，提供完整的类型定义和智能提示。</p>`,33)])])}const E=s(n,[["render",e]]);export{c as __pageData,E as default};
