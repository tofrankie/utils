import{_ as e,c as s,o as i,ag as t}from"./chunks/framework.BVIN5JXz.js";const k=JSON.parse('{"title":"Function: delay()","description":"","frontmatter":{},"headers":[],"relativePath":"en/api/functions/delay.md","filePath":"en/api/functions/delay.md","lastUpdated":1757214331000}'),n={name:"en/api/functions/delay.md"};function r(l,a,o,d,h,p){return i(),s("div",null,[...a[0]||(a[0]=[t(`<p><a href="./../README.html"><strong>JavaScript Utils API v0.0.1</strong></a></p><hr><p><a href="./../globals.html">JavaScript Utils API</a> / delay</p><h1 id="function-delay" tabindex="-1">Function: delay() <a class="header-anchor" href="#function-delay" aria-label="Permalink to &quot;Function: delay()&quot;">​</a></h1><blockquote><p><strong>delay</strong>&lt;<code>T</code>&gt;(<code>func</code>, <code>ms</code>): (...<code>args</code>) =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/toFrankie/utils/blob/6fe72e7788243f5d10d8a2f3a2f17524edf4c4ce/src/function/delay.ts#L21" target="_blank" rel="noreferrer">delay.ts:21</a></p><p>延迟执行函数</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><h3 id="t" tabindex="-1">T <a class="header-anchor" href="#t" aria-label="Permalink to &quot;T&quot;">​</a></h3><p><code>T</code> <em>extends</em> (...<code>args</code>) =&gt; <code>any</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="func" tabindex="-1">func <a class="header-anchor" href="#func" aria-label="Permalink to &quot;func&quot;">​</a></h3><p><code>T</code></p><p>要延迟执行的函数</p><h3 id="ms" tabindex="-1">ms <a class="header-anchor" href="#ms" aria-label="Permalink to &quot;ms&quot;">​</a></h3><p><code>number</code></p><p>延迟时间（毫秒）</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p>延迟执行的函数</p><blockquote><p>(...<code>args</code>): <code>void</code></p></blockquote><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><h4 id="args" tabindex="-1">args <a class="header-anchor" href="#args" aria-label="Permalink to &quot;args&quot;">​</a></h4><p>...<code>Parameters</code>&lt;<code>T</code>&gt;</p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>void</code></p><h2 id="since" tabindex="-1">Since <a class="header-anchor" href="#since" aria-label="Permalink to &quot;Since&quot;">​</a></h2><p>1.0.0</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> delayedFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;延迟执行&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1秒后执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delayedFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,29)])])}const u=e(n,[["render",r]]);export{k as __pageData,u as default};
