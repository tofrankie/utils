import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.BVIN5JXz.js";const c=JSON.parse('{"title":"贡献指南","description":"","frontmatter":{},"headers":[],"relativePath":"guide/contributing.md","filePath":"guide/contributing.md","lastUpdated":1757408466000}'),t={name:"guide/contributing.md"};function e(h,s,p,r,k,o){return n(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="贡献指南" tabindex="-1">贡献指南 <a class="header-anchor" href="#贡献指南" aria-label="Permalink to &quot;贡献指南&quot;">​</a></h1><p>感谢您对 JavaScript Utils 项目的关注！我们欢迎各种形式的贡献。</p><h2 id="🚀-快速开始" tabindex="-1">🚀 快速开始 <a class="header-anchor" href="#🚀-快速开始" aria-label="Permalink to &quot;🚀 快速开始&quot;">​</a></h2><h3 id="环境要求" tabindex="-1">环境要求 <a class="header-anchor" href="#环境要求" aria-label="Permalink to &quot;环境要求&quot;">​</a></h3><ul><li>Node.js &gt;= 22.0.0</li><li>pnpm &gt;= 8.0.0</li></ul><h3 id="本地开发" tabindex="-1">本地开发 <a class="header-anchor" href="#本地开发" aria-label="Permalink to &quot;本地开发&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 克隆项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/toFrankie/utils.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> utils</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动开发服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行测试</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 构建项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h2 id="📝-贡献方式" tabindex="-1">📝 贡献方式 <a class="header-anchor" href="#📝-贡献方式" aria-label="Permalink to &quot;📝 贡献方式&quot;">​</a></h2><h3 id="_1-报告问题" tabindex="-1">1. 报告问题 <a class="header-anchor" href="#_1-报告问题" aria-label="Permalink to &quot;1. 报告问题&quot;">​</a></h3><p>如果您发现了 bug 或有功能建议，请：</p><ol><li>检查 <a href="https://github.com/toFrankie/utils/issues" target="_blank" rel="noreferrer">Issues</a> 是否已存在</li><li>创建新的 Issue，详细描述问题或建议</li><li>提供复现步骤（如果是 bug）</li></ol><h3 id="_2-提交代码" tabindex="-1">2. 提交代码 <a class="header-anchor" href="#_2-提交代码" aria-label="Permalink to &quot;2. 提交代码&quot;">​</a></h3><ol><li>Fork 项目到您的 GitHub 账户</li><li>创建功能分支：<code>git checkout -b feature/your-feature-name</code></li><li>提交更改：<code>git commit -m &#39;feat: add your feature&#39;</code></li><li>推送分支：<code>git push origin feature/your-feature-name</code></li><li>创建 Pull Request</li></ol><h3 id="_3-编写文档" tabindex="-1">3. 编写文档 <a class="header-anchor" href="#_3-编写文档" aria-label="Permalink to &quot;3. 编写文档&quot;">​</a></h3><ul><li>更新 README.md</li><li>添加或更新 API 文档</li><li>编写使用示例</li><li>改进现有文档</li></ul><h2 id="🛠️-开发规范" tabindex="-1">🛠️ 开发规范 <a class="header-anchor" href="#🛠️-开发规范" aria-label="Permalink to &quot;🛠️ 开发规范&quot;">​</a></h2><h3 id="代码规范" tabindex="-1">代码规范 <a class="header-anchor" href="#代码规范" aria-label="Permalink to &quot;代码规范&quot;">​</a></h3><p>项目使用以下工具确保代码质量：</p><ul><li><strong>ESLint</strong> - 代码风格检查</li><li><strong>Prettier</strong> - 代码格式化</li><li><strong>TypeScript</strong> - 类型检查</li><li><strong>Vitest</strong> - 单元测试</li></ul><h3 id="提交信息规范" tabindex="-1">提交信息规范 <a class="header-anchor" href="#提交信息规范" aria-label="Permalink to &quot;提交信息规范&quot;">​</a></h3><p>使用 <a href="https://www.conventionalcommits.org/" target="_blank" rel="noreferrer">Conventional Commits</a> 规范：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;type&gt;[optional scope]: &lt;description&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[optional body]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[optional footer(s)]</span></span></code></pre></div><p>常用类型：</p><ul><li><code>feat</code>: 新功能</li><li><code>fix</code>: 修复 bug</li><li><code>docs</code>: 文档更新</li><li><code>style</code>: 代码格式调整</li><li><code>refactor</code>: 代码重构</li><li><code>test</code>: 测试相关</li><li><code>chore</code>: 构建过程或辅助工具的变动</li></ul><h3 id="测试要求" tabindex="-1">测试要求 <a class="header-anchor" href="#测试要求" aria-label="Permalink to &quot;测试要求&quot;">​</a></h3><ul><li>新功能必须包含测试用例</li><li>测试覆盖率不能低于当前水平</li><li>所有测试必须通过</li></ul><h3 id="文件命名规范" tabindex="-1">文件命名规范 <a class="header-anchor" href="#文件命名规范" aria-label="Permalink to &quot;文件命名规范&quot;">​</a></h3><ul><li>使用 <code>kebab-case</code> 命名：<code>my-function.ts</code></li><li>特殊函数名保持原意：<code>convert2pinyin</code></li><li>测试文件后缀：<code>*.test.ts</code></li><li>示例文件后缀：<code>*-demo.html</code></li></ul><h2 id="📦-添加新函数" tabindex="-1">📦 添加新函数 <a class="header-anchor" href="#📦-添加新函数" aria-label="Permalink to &quot;📦 添加新函数&quot;">​</a></h2><h3 id="_1-创建函数文件" tabindex="-1">1. 创建函数文件 <a class="header-anchor" href="#_1-创建函数文件" aria-label="Permalink to &quot;1. 创建函数文件&quot;">​</a></h3><p>在相应的分类目录下创建函数文件：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/array/my-function.ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 函数描述</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> param1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 参数1描述</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> param2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 参数2描述</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 返回值描述</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@example</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * \`\`\`ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * const result = myFunction(param1, param2)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * console.log(result)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> myFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">param1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">param2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 实现代码</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-更新索引文件" tabindex="-1">2. 更新索引文件 <a class="header-anchor" href="#_2-更新索引文件" aria-label="Permalink to &quot;2. 更新索引文件&quot;">​</a></h3><p>在相应的 <code>index.ts</code> 中导出新函数：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/array/index.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./my-function&#39;</span></span></code></pre></div><h3 id="_3-添加测试" tabindex="-1">3. 添加测试 <a class="header-anchor" href="#_3-添加测试" aria-label="Permalink to &quot;3. 添加测试&quot;">​</a></h3><p>创建测试文件：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// test/array/my-function.test.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { describe, it, expect } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { myFunction } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;../../src/array/my-function&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myFunction&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  it</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;should work correctly&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">myFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_4-更新文档" tabindex="-1">4. 更新文档 <a class="header-anchor" href="#_4-更新文档" aria-label="Permalink to &quot;4. 更新文档&quot;">​</a></h3><ul><li>运行 <code>pnpm docs:api</code> 生成 API 文档</li><li>在 <code>docs/guide/examples.md</code> 中添加使用示例</li><li>更新 <code>docs/guide/functions.md</code> 中的函数列表</li></ul><h2 id="🔍-代码审查" tabindex="-1">🔍 代码审查 <a class="header-anchor" href="#🔍-代码审查" aria-label="Permalink to &quot;🔍 代码审查&quot;">​</a></h2><h3 id="pull-request-检查清单" tabindex="-1">Pull Request 检查清单 <a class="header-anchor" href="#pull-request-检查清单" aria-label="Permalink to &quot;Pull Request 检查清单&quot;">​</a></h3><ul><li>[ ] 代码符合项目规范</li><li>[ ] 所有测试通过</li><li>[ ] 添加了必要的测试用例</li><li>[ ] 更新了相关文档</li><li>[ ] 提交信息符合规范</li><li>[ ] 没有破坏性更改</li></ul><h3 id="审查重点" tabindex="-1">审查重点 <a class="header-anchor" href="#审查重点" aria-label="Permalink to &quot;审查重点&quot;">​</a></h3><ol><li><strong>功能正确性</strong> - 函数是否按预期工作</li><li><strong>性能考虑</strong> - 是否有性能问题</li><li><strong>类型安全</strong> - TypeScript 类型是否正确</li><li><strong>测试覆盖</strong> - 是否有足够的测试</li><li><strong>文档完整</strong> - 是否有清晰的文档和示例</li></ol><h2 id="📚-资源" tabindex="-1">📚 资源 <a class="header-anchor" href="#📚-资源" aria-label="Permalink to &quot;📚 资源&quot;">​</a></h2><ul><li><a href="https://tofrankie.github.io/utils/" target="_blank" rel="noreferrer">项目文档</a></li><li><a href="https://tofrankie.github.io/utils/api/" target="_blank" rel="noreferrer">API 参考</a></li><li><a href="https://tofrankie.github.io/utils/playground/" target="_blank" rel="noreferrer">在线演示</a></li><li><a href="https://github.com/toFrankie/utils/issues" target="_blank" rel="noreferrer">GitHub Issues</a></li></ul><h2 id="💬-社区" tabindex="-1">💬 社区 <a class="header-anchor" href="#💬-社区" aria-label="Permalink to &quot;💬 社区&quot;">​</a></h2><ul><li>在 <a href="https://github.com/toFrankie/utils/discussions" target="_blank" rel="noreferrer">GitHub Discussions</a> 中讨论</li><li>关注项目更新和公告</li></ul><p>感谢您的贡献！🎉</p>`,50)])])}const g=i(t,[["render",e]]);export{c as __pageData,g as default};
