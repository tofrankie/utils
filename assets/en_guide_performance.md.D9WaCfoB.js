import{_ as s,c as t,o as a,ag as e}from"./chunks/framework.BVIN5JXz.js";const c=JSON.parse('{"title":"Performance","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/performance.md","filePath":"en/guide/performance.md","lastUpdated":1757213416000}'),n={name:"en/guide/performance.md"};function r(l,i,h,d,o,p){return a(),t("div",null,[...i[0]||(i[0]=[e(`<h1 id="performance" tabindex="-1">Performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;Performance&quot;">​</a></h1><p>JavaScript Utils is optimized for high performance and minimal bundle size.</p><h2 id="bundle-size-analysis" tabindex="-1">Bundle Size Analysis <a class="header-anchor" href="#bundle-size-analysis" aria-label="Permalink to &quot;Bundle Size Analysis&quot;">​</a></h2><h3 id="individual-function-sizes" tabindex="-1">Individual Function Sizes <a class="header-anchor" href="#individual-function-sizes" aria-label="Permalink to &quot;Individual Function Sizes&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Size</th><th>Gzipped</th></tr></thead><tbody><tr><td>debounce</td><td>0.5KB</td><td>0.3KB</td></tr><tr><td>throttle</td><td>0.5KB</td><td>0.3KB</td></tr><tr><td>delay</td><td>0.3KB</td><td>0.2KB</td></tr><tr><td>isArray</td><td>0.2KB</td><td>0.1KB</td></tr><tr><td>chunk</td><td>0.4KB</td><td>0.2KB</td></tr><tr><td>unique</td><td>0.3KB</td><td>0.2KB</td></tr><tr><td>deepCopy</td><td>0.4KB</td><td>0.2KB</td></tr><tr><td>pick</td><td>0.3KB</td><td>0.2KB</td></tr><tr><td>omit</td><td>0.3KB</td><td>0.2KB</td></tr><tr><td>convert2pinyin</td><td>0.3KB</td><td>0.2KB</td></tr><tr><td>capitalize</td><td>0.2KB</td><td>0.1KB</td></tr><tr><td>camelCase</td><td>0.3KB</td><td>0.2KB</td></tr><tr><td>checkIdNumber</td><td>0.4KB</td><td>0.2KB</td></tr><tr><td>isEmail</td><td>0.2KB</td><td>0.1KB</td></tr><tr><td>isPhone</td><td>0.2KB</td><td>0.1KB</td></tr></tbody></table><h3 id="import-method-comparison" tabindex="-1">Import Method Comparison <a class="header-anchor" href="#import-method-comparison" aria-label="Permalink to &quot;Import Method Comparison&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Import Method</th><th>Bundle Size</th><th>Tree Shaking</th></tr></thead><tbody><tr><td><code>import { debounce } from &#39;@tofrankie/utils&#39;</code></td><td>~0.5KB</td><td>✅</td></tr><tr><td><code>import { debounce, throttle } from &#39;@tofrankie/utils&#39;</code></td><td>~1.0KB</td><td>✅</td></tr><tr><td><code>import * as utils from &#39;@tofrankie/utils&#39;</code></td><td>~15KB</td><td>❌</td></tr></tbody></table><h2 id="performance-benchmarks" tabindex="-1">Performance Benchmarks <a class="header-anchor" href="#performance-benchmarks" aria-label="Permalink to &quot;Performance Benchmarks&quot;">​</a></h2><h3 id="function-execution-performance" tabindex="-1">Function Execution Performance <a class="header-anchor" href="#function-execution-performance" aria-label="Permalink to &quot;Function Execution Performance&quot;">​</a></h3><p>All functions are optimized for speed and minimal memory usage:</p><ul><li><strong>debounce</strong>: ~0.1ms execution time</li><li><strong>throttle</strong>: ~0.1ms execution time</li><li><strong>isArray</strong>: ~0.01ms execution time</li><li><strong>deepCopy</strong>: ~0.5ms for small objects</li><li><strong>unique</strong>: ~0.2ms for arrays up to 1000 items</li></ul><h3 id="memory-usage" tabindex="-1">Memory Usage <a class="header-anchor" href="#memory-usage" aria-label="Permalink to &quot;Memory Usage&quot;">​</a></h3><p>JavaScript Utils functions are designed to minimize memory allocation:</p><ul><li>No unnecessary object creation</li><li>Efficient algorithms for common operations</li><li>Minimal closure overhead</li></ul><h2 id="tree-shaking-analysis" tabindex="-1">Tree Shaking Analysis <a class="header-anchor" href="#tree-shaking-analysis" aria-label="Permalink to &quot;Tree Shaking Analysis&quot;">​</a></h2><h3 id="main-entry-import-recommended" tabindex="-1">Main Entry Import (Recommended) <a class="header-anchor" href="#main-entry-import-recommended" aria-label="Permalink to &quot;Main Entry Import (Recommended)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { debounce } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span></code></pre></div><p><strong>Result</strong>: Only the <code>debounce</code> function and its dependencies are included in the bundle.</p><h3 id="individual-function-import" tabindex="-1">Individual Function Import <a class="header-anchor" href="#individual-function-import" aria-label="Permalink to &quot;Individual Function Import&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> debounce </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils/debounce&#39;</span></span></code></pre></div><p><strong>Result</strong>: Same as main entry import - only the <code>debounce</code> function is included.</p><h3 id="full-import-not-recommended" tabindex="-1">Full Import (Not Recommended) <a class="header-anchor" href="#full-import-not-recommended" aria-label="Permalink to &quot;Full Import (Not Recommended)&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> utils </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span></code></pre></div><p><strong>Result</strong>: All functions are included in the bundle (~15KB).</p><h2 id="build-performance" tabindex="-1">Build Performance <a class="header-anchor" href="#build-performance" aria-label="Permalink to &quot;Build Performance&quot;">​</a></h2><p>JavaScript Utils uses tsdown for building, which provides:</p><ul><li><strong>Fast</strong> build times with modern tooling</li><li><strong>Optimized bundle output</strong> with minimal overhead</li><li><strong>Source maps</strong> for debugging</li><li><strong>Multiple format support</strong> (ESM, CJS, UMD)</li></ul><h2 id="runtime-performance" tabindex="-1">Runtime Performance <a class="header-anchor" href="#runtime-performance" aria-label="Permalink to &quot;Runtime Performance&quot;">​</a></h2><h3 id="optimizations" tabindex="-1">Optimizations <a class="header-anchor" href="#optimizations" aria-label="Permalink to &quot;Optimizations&quot;">​</a></h3><ol><li><strong>Efficient Algorithms</strong>: All functions use optimized algorithms</li><li><strong>Minimal Dependencies</strong>: No external dependencies</li><li><strong>Type Safety</strong>: TypeScript compilation optimizations</li><li><strong>Tree Shaking</strong>: Dead code elimination</li></ol><h3 id="memory-management" tabindex="-1">Memory Management <a class="header-anchor" href="#memory-management" aria-label="Permalink to &quot;Memory Management&quot;">​</a></h3><ul><li><strong>No Memory Leaks</strong>: All functions are designed to prevent memory leaks</li><li><strong>Efficient Closures</strong>: Minimal closure overhead</li><li><strong>Garbage Collection Friendly</strong>: Functions don&#39;t hold unnecessary references</li></ul><h2 id="comparison-with-other-libraries" tabindex="-1">Comparison with Other Libraries <a class="header-anchor" href="#comparison-with-other-libraries" aria-label="Permalink to &quot;Comparison with Other Libraries&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Library</th><th>Bundle Size</th><th>Tree Shaking</th><th>TypeScript</th></tr></thead><tbody><tr><td>JavaScript Utils</td><td>~0.5KB per function</td><td>✅</td><td>✅</td></tr><tr><td>Lodash</td><td>~70KB (full)</td><td>✅</td><td>✅</td></tr><tr><td>Ramda</td><td>~50KB (full)</td><td>✅</td><td>❌</td></tr><tr><td>Underscore</td><td>~25KB (full)</td><td>❌</td><td>❌</td></tr></tbody></table><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="_1-use-tree-shaking" tabindex="-1">1. Use Tree Shaking <a class="header-anchor" href="#_1-use-tree-shaking" aria-label="Permalink to &quot;1. Use Tree Shaking&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ✅ Good</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { debounce, throttle } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ❌ Avoid</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> utils </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span></code></pre></div><h3 id="_2-import-only-what-you-need" tabindex="-1">2. Import Only What You Need <a class="header-anchor" href="#_2-import-only-what-you-need" aria-label="Permalink to &quot;2. Import Only What You Need&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ✅ Good - Only imports debounce</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { debounce } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ❌ Avoid - Imports entire library</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> utils </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span></code></pre></div><h3 id="_3-use-typescript" tabindex="-1">3. Use TypeScript <a class="header-anchor" href="#_3-use-typescript" aria-label="Permalink to &quot;3. Use TypeScript&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ✅ Good - Type safety and optimizations</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { debounce } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> debouncedFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> debounce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="performance-monitoring" tabindex="-1">Performance Monitoring <a class="header-anchor" href="#performance-monitoring" aria-label="Permalink to &quot;Performance Monitoring&quot;">​</a></h2><p>You can monitor the performance of JavaScript Utils functions in your application:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { debounce } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Performance monitoring</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> debouncedFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> debounce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Executed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`Debounce creation time: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}ms\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li><a href="/utils/en/guide/examples.html">Examples</a> - See performance in action</li><li><a href="/utils/en/api/">API Reference</a> - Detailed function documentation</li><li><a href="/utils/en/playground/">Playground</a> - Test performance online</li></ul>`,46)])])}const m=s(n,[["render",r]]);export{c as __pageData,m as default};
