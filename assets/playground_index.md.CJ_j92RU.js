import{_ as n,C as l,c as h,o as e,ag as i,G as t}from"./chunks/framework.BVIN5JXz.js";const E=JSON.parse('{"title":"Playground","description":"","frontmatter":{},"headers":[],"relativePath":"playground/index.md","filePath":"playground/index.md","lastUpdated":1758460139000}'),p={name:"playground/index.md"};function k(r,s,d,o,c,g){const a=l("PlaygroundVersion");return e(),h("div",null,[s[0]||(s[0]=i(`<h1 id="playground" tabindex="-1">Playground <a class="header-anchor" href="#playground" aria-label="Permalink to &quot;Playground&quot;">​</a></h1><p>在线体验 JavaScript Utils 工具函数，无需安装即可测试所有功能。</p><h2 id="🚀-快速开始" tabindex="-1">🚀 快速开始 <a class="header-anchor" href="#🚀-快速开始" aria-label="Permalink to &quot;🚀 快速开始&quot;">​</a></h2><p>点击下方按钮打开在线演示环境，支持实时编辑和运行：</p><div style="text-align:center;margin:2rem 0;"><a href="https://stackblitz.com/github/tofrankie/utils" target="_blank" style="display:inline-block;padding:12px 24px;background:#4F46E5;color:white;text-decoration:none;border-radius:8px;font-weight:500;"> 🎮 打开在线演示 </a></div><h2 id="💻-本地演示" tabindex="-1">💻 本地演示 <a class="header-anchor" href="#💻-本地演示" aria-label="Permalink to &quot;💻 本地演示&quot;">​</a></h2><p>你也可以在本地运行演示：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 克隆项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/tofrankie/utils.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> utils</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行本地演示</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:array</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 数组工具演示</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:object</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 对象工具演示</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 字符串工具演示</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:validation</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 验证工具演示</span></span></code></pre></div><h2 id="📚-函数分类" tabindex="-1">📚 函数分类 <a class="header-anchor" href="#📚-函数分类" aria-label="Permalink to &quot;📚 函数分类&quot;">​</a></h2><p>选择你想要体验的函数：</p><h3 id="函数工具" tabindex="-1">函数工具 <a class="header-anchor" href="#函数工具" aria-label="Permalink to &quot;函数工具&quot;">​</a></h3><ul><li><a href="#debounce">防抖 (debounce)</a> - 延迟执行函数，在指定时间内只执行最后一次</li><li><a href="#throttle">节流 (throttle)</a> - 限制函数执行频率，在指定时间内最多执行一次</li><li><a href="#delay">延迟 (delay)</a> - 延迟执行函数</li></ul><h3 id="数组工具" tabindex="-1">数组工具 <a class="header-anchor" href="#数组工具" aria-label="Permalink to &quot;数组工具&quot;">​</a></h3><ul><li><a href="#isarray">数组检查 (isArray)</a> - 检查值是否为数组</li><li><a href="#chunk">数组分块 (chunk)</a> - 将数组分割成指定大小的块</li><li><a href="#unique">数组去重 (unique)</a> - 数组去重</li></ul><h3 id="对象工具" tabindex="-1">对象工具 <a class="header-anchor" href="#对象工具" aria-label="Permalink to &quot;对象工具&quot;">​</a></h3><ul><li><a href="#deepcopy">深拷贝 (deepCopy)</a> - 深拷贝对象</li><li><a href="#pick">属性选择 (pick)</a> - 从对象中选取指定的属性</li><li><a href="#omit">属性排除 (omit)</a> - 从对象中排除指定的属性</li></ul><h3 id="字符串工具" tabindex="-1">字符串工具 <a class="header-anchor" href="#字符串工具" aria-label="Permalink to &quot;字符串工具&quot;">​</a></h3><ul><li><a href="#convert2pinyin">拼音转换 (convert2pinyin)</a> - 将中文字符转换为拼音</li><li><a href="#capitalize">首字母大写 (capitalize)</a> - 将字符串首字母大写</li><li><a href="#camelcase">驼峰命名 (camelCase)</a> - 将字符串转换为驼峰命名</li></ul><h3 id="验证工具" tabindex="-1">验证工具 <a class="header-anchor" href="#验证工具" aria-label="Permalink to &quot;验证工具&quot;">​</a></h3><ul><li><a href="#checkidnumber">身份证验证 (checkIdNumber)</a> - 验证中国身份证号码</li><li><a href="#isemail">邮箱验证 (isEmail)</a> - 验证邮箱地址</li><li><a href="#isphone">手机号验证 (isPhone)</a> - 验证手机号码</li></ul><h2 id="在线编辑器" tabindex="-1">在线编辑器 <a class="header-anchor" href="#在线编辑器" aria-label="Permalink to &quot;在线编辑器&quot;">​</a></h2><h3 id="🎮-交互式-playground" tabindex="-1">🎮 交互式 Playground <a class="header-anchor" href="#🎮-交互式-playground" aria-label="Permalink to &quot;🎮 交互式 Playground&quot;">​</a></h3>`,22)),t(a),s[1]||(s[1]=i(`<h3 id="📚-版本说明" tabindex="-1">📚 版本说明 <a class="header-anchor" href="#📚-版本说明" aria-label="Permalink to &quot;📚 版本说明&quot;">​</a></h3><ul><li><strong>最新版本</strong>: 包含所有最新功能和修复</li><li><strong>稳定版本</strong>: 经过充分测试的稳定版本</li><li><strong>测试版本</strong>: 包含实验性功能的预览版本</li></ul><h2 id="本地开发" tabindex="-1">本地开发 <a class="header-anchor" href="#本地开发" aria-label="Permalink to &quot;本地开发&quot;">​</a></h2><p>你也可以在本地运行示例：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 运行 ESM 示例</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev:examples</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者直接运行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/esm-demo.mjs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> examples/node-demo.cjs</span></span></code></pre></div><h2 id="示例代码" tabindex="-1">示例代码 <a class="header-anchor" href="#示例代码" aria-label="Permalink to &quot;示例代码&quot;">​</a></h2><h3 id="防抖示例" tabindex="-1">防抖示例 <a class="header-anchor" href="#防抖示例" aria-label="Permalink to &quot;防抖示例&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { debounce } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> debouncedFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> debounce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;防抖执行&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 快速调用多次，只会在最后一次调用后 300ms 执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debouncedFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debouncedFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debouncedFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 只有这次会执行</span></span></code></pre></div><h3 id="节流示例" tabindex="-1">节流示例 <a class="header-anchor" href="#节流示例" aria-label="Permalink to &quot;节流示例&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { throttle } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> throttledFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> throttle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;节流执行&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在 300ms 内多次调用，只会执行一次</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">throttledFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">throttledFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 被忽略</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">throttledFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 被忽略</span></span></code></pre></div><h3 id="延迟示例" tabindex="-1">延迟示例 <a class="header-anchor" href="#延迟示例" aria-label="Permalink to &quot;延迟示例&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { delay } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@tofrankie/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> delayedFn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;延迟执行&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1秒后执行</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">delayedFn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div>`,12))])}const F=n(p,[["render",k]]);export{E as __pageData,F as default};
