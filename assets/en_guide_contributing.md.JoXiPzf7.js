import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.DRADY2L-.js";const c=JSON.parse('{"title":"Contributing","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/contributing.md","filePath":"en/guide/contributing.md","lastUpdated":1757212236000}'),n={name:"en/guide/contributing.md"};function l(r,s,p,h,o,d){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="contributing" tabindex="-1">Contributing <a class="header-anchor" href="#contributing" aria-label="Permalink to &quot;Contributing&quot;">​</a></h1><p>Thank you for your interest in the JavaScript Utils project! We welcome contributions in various forms.</p><h2 id="🚀-quick-start" tabindex="-1">🚀 Quick Start <a class="header-anchor" href="#🚀-quick-start" aria-label="Permalink to &quot;🚀 Quick Start&quot;">​</a></h2><h3 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h3><ul><li>Node.js &gt;= 22.0.0</li><li>pnpm &gt;= 8.0.0</li></ul><h3 id="local-development" tabindex="-1">Local Development <a class="header-anchor" href="#local-development" aria-label="Permalink to &quot;Local Development&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Clone the project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/toFrankie/utils.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> utils</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start development server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run tests</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Build project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre></div><h2 id="📝-ways-to-contribute" tabindex="-1">📝 Ways to Contribute <a class="header-anchor" href="#📝-ways-to-contribute" aria-label="Permalink to &quot;📝 Ways to Contribute&quot;">​</a></h2><h3 id="_1-report-issues" tabindex="-1">1. Report Issues <a class="header-anchor" href="#_1-report-issues" aria-label="Permalink to &quot;1. Report Issues&quot;">​</a></h3><p>If you find bugs or have feature suggestions, please:</p><ol><li>Check <a href="https://github.com/toFrankie/utils/issues" target="_blank" rel="noreferrer">Issues</a> to see if it already exists</li><li>Create a new Issue with detailed description of the problem or suggestion</li><li>Provide reproduction steps (if it&#39;s a bug)</li></ol><h3 id="_2-submit-code" tabindex="-1">2. Submit Code <a class="header-anchor" href="#_2-submit-code" aria-label="Permalink to &quot;2. Submit Code&quot;">​</a></h3><ol><li>Fork the project to your GitHub account</li><li>Create a feature branch: <code>git checkout -b feature/your-feature-name</code></li><li>Commit changes: <code>git commit -m &#39;feat: add your feature&#39;</code></li><li>Push branch: <code>git push origin feature/your-feature-name</code></li><li>Create a Pull Request</li></ol><h3 id="_3-write-documentation" tabindex="-1">3. Write Documentation <a class="header-anchor" href="#_3-write-documentation" aria-label="Permalink to &quot;3. Write Documentation&quot;">​</a></h3><ul><li>Update README.md</li><li>Add or update API documentation</li><li>Write usage examples</li><li>Improve existing documentation</li></ul><h2 id="🛠️-development-standards" tabindex="-1">🛠️ Development Standards <a class="header-anchor" href="#🛠️-development-standards" aria-label="Permalink to &quot;🛠️ Development Standards&quot;">​</a></h2><h3 id="code-standards" tabindex="-1">Code Standards <a class="header-anchor" href="#code-standards" aria-label="Permalink to &quot;Code Standards&quot;">​</a></h3><p>The project uses the following tools to ensure code quality:</p><ul><li><strong>ESLint</strong> - Code style checking</li><li><strong>Prettier</strong> - Code formatting</li><li><strong>TypeScript</strong> - Type checking</li><li><strong>Vitest</strong> - Unit testing</li></ul><h3 id="commit-message-standards" tabindex="-1">Commit Message Standards <a class="header-anchor" href="#commit-message-standards" aria-label="Permalink to &quot;Commit Message Standards&quot;">​</a></h3><p>Use <a href="https://www.conventionalcommits.org/" target="_blank" rel="noreferrer">Conventional Commits</a> standard:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&lt;type&gt;[optional scope]: &lt;description&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[optional body]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[optional footer(s)]</span></span></code></pre></div><p>Common types:</p><ul><li><code>feat</code>: New feature</li><li><code>fix</code>: Bug fix</li><li><code>docs</code>: Documentation update</li><li><code>style</code>: Code formatting</li><li><code>refactor</code>: Code refactoring</li><li><code>test</code>: Test related</li><li><code>chore</code>: Build process or auxiliary tool changes</li></ul><h3 id="testing-requirements" tabindex="-1">Testing Requirements <a class="header-anchor" href="#testing-requirements" aria-label="Permalink to &quot;Testing Requirements&quot;">​</a></h3><ul><li>New features must include test cases</li><li>Test coverage should not be lower than current level</li><li>All tests must pass</li></ul><h3 id="file-naming-standards" tabindex="-1">File Naming Standards <a class="header-anchor" href="#file-naming-standards" aria-label="Permalink to &quot;File Naming Standards&quot;">​</a></h3><ul><li>Use <code>kebab-case</code> naming: <code>my-function.ts</code></li><li>Special function names keep original meaning: <code>convert2pinyin</code></li><li>Test file suffix: <code>*.test.ts</code></li><li>Example file suffix: <code>*-demo.html</code></li></ul><h2 id="📦-adding-new-functions" tabindex="-1">📦 Adding New Functions <a class="header-anchor" href="#📦-adding-new-functions" aria-label="Permalink to &quot;📦 Adding New Functions&quot;">​</a></h2><h3 id="_1-create-function-file" tabindex="-1">1. Create Function File <a class="header-anchor" href="#_1-create-function-file" aria-label="Permalink to &quot;1. Create Function File&quot;">​</a></h3><p>Create function file in the appropriate category directory:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/array/my-function.ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Function description</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> param1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Parameter 1 description</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> param2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Parameter 2 description</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Return value description</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@example</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * \`\`\`ts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * const result = myFunction(param1, param2)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * console.log(result)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * \`\`\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> myFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">param1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">param2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Implementation code</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_2-update-index-file" tabindex="-1">2. Update Index File <a class="header-anchor" href="#_2-update-index-file" aria-label="Permalink to &quot;2. Update Index File&quot;">​</a></h3><p>Export new function in the corresponding <code>index.ts</code>:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/array/index.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./my-function&#39;</span></span></code></pre></div><h3 id="_3-add-tests" tabindex="-1">3. Add Tests <a class="header-anchor" href="#_3-add-tests" aria-label="Permalink to &quot;3. Add Tests&quot;">​</a></h3><p>Create test file:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// test/array/my-function.test.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { describe, it, expect } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { myFunction } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;../../src/array/my-function&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">describe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myFunction&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  it</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;should work correctly&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">myFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_4-update-documentation" tabindex="-1">4. Update Documentation <a class="header-anchor" href="#_4-update-documentation" aria-label="Permalink to &quot;4. Update Documentation&quot;">​</a></h3><ul><li>Run <code>pnpm docs:api</code> to generate API documentation</li><li>Add usage examples in <code>docs/guide/examples.md</code></li><li>Update function list in <code>docs/guide/functions.md</code></li></ul><h2 id="🔍-code-review" tabindex="-1">🔍 Code Review <a class="header-anchor" href="#🔍-code-review" aria-label="Permalink to &quot;🔍 Code Review&quot;">​</a></h2><h3 id="pull-request-checklist" tabindex="-1">Pull Request Checklist <a class="header-anchor" href="#pull-request-checklist" aria-label="Permalink to &quot;Pull Request Checklist&quot;">​</a></h3><ul><li>[ ] Code follows project standards</li><li>[ ] All tests pass</li><li>[ ] Added necessary test cases</li><li>[ ] Updated relevant documentation</li><li>[ ] Commit messages follow standards</li><li>[ ] No breaking changes</li></ul><h3 id="review-focus" tabindex="-1">Review Focus <a class="header-anchor" href="#review-focus" aria-label="Permalink to &quot;Review Focus&quot;">​</a></h3><ol><li><strong>Function Correctness</strong> - Does the function work as expected</li><li><strong>Performance Considerations</strong> - Are there any performance issues</li><li><strong>Type Safety</strong> - Are TypeScript types correct</li><li><strong>Test Coverage</strong> - Is there sufficient testing</li><li><strong>Documentation Completeness</strong> - Is there clear documentation and examples</li></ol><h2 id="📚-resources" tabindex="-1">📚 Resources <a class="header-anchor" href="#📚-resources" aria-label="Permalink to &quot;📚 Resources&quot;">​</a></h2><ul><li><a href="https://toFrankie.github.io/" target="_blank" rel="noreferrer">Project Documentation</a></li><li><a href="https://toFrankie.github.io/api/" target="_blank" rel="noreferrer">API Reference</a></li><li><a href="https://toFrankie.github.io/playground/" target="_blank" rel="noreferrer">Online Demo</a></li><li><a href="https://github.com/toFrankie/utils/issues" target="_blank" rel="noreferrer">GitHub Issues</a></li></ul><h2 id="💬-community" tabindex="-1">💬 Community <a class="header-anchor" href="#💬-community" aria-label="Permalink to &quot;💬 Community&quot;">​</a></h2><ul><li>Discuss in <a href="https://github.com/toFrankie/utils/discussions" target="_blank" rel="noreferrer">GitHub Discussions</a></li><li>Follow project updates and announcements</li></ul><p>Thank you for your contribution! 🎉</p>`,50)])])}const u=i(n,[["render",l]]);export{c as __pageData,u as default};
